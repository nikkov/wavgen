#ifndef __POWER2FFT_TRANSFORM__
#define __POWER2FFT_TRANSFORM__

#include "complstd.h"
#include "export.h"

namespace namespace_fft
{
//! Проверка допустимости длины для классического алгоритма fft
/*!
	Проверяется допустимость длины для классического алгоритма fft по основанию 2.
\param n	проверяемая длина
\return		true - если длина является допустимой для данного алгоритма
*/
COREDSP_API bool IsFftRadix2Length( ulong n );

//! Быстрое преобразование Фурье (классическая "бабочка")
/*!
	Быстрое преобразование Фурье (классическая "бабочка", неоптимизированный! ).
	При попытке преобразования недопустимой длины последовательности 
	генерируется исключение типа CmpException.
\param x	входной массив комплексных данных
\param y	выходной массив комплексных данных
\param n	длина массива
\param isign	направление преобразования (-1 соответствует прямому, 1 - обратному БПФ )
*/
COREDSP_API void FftRadix2( Complex *cdata, unsigned long nn, int isign );

//! Проверка допустимости длины для классического алгоритма fft с прореживанием по частоте и времени
/*!
Проверяется допустимость длины для классического алгоритма fft с прореживанием по частоте и времени
\param n	проверяемая длина
\return		true - если длина является допустимой для данного алгоритма
*/
COREDSP_API bool IsFftDitf4Length( ulong n );

//! Быстрое преобразование Фурье (с прореживанием по времени)
/*!
Быстрое преобразование Фурье (с прореживанием по времени, слабооптимизированный! ).
При попытке преобразования недопустимой длины последовательности 
генерируется исключение типа CmpException.
\param x	входной массив комплексных данных
\param y	выходной массив комплексных данных
\param n	длина массива
\param isign	направление преобразования (-1 соответствует прямому, 1 - обратному БПФ )
*/
COREDSP_API void FftDit4( Complex *f, ulong n, int is );

//! Быстрое преобразование Фурье (с прореживанием по частоте)
/*!
Быстрое преобразование Фурье (с прореживанием по частоте, слабооптимизированный! ).
При попытке преобразования недопустимой длины последовательности 
генерируется исключение типа CmpException.
\param x	входной массив комплексных данных
\param y	выходной массив комплексных данных
\param n	длина массива
\param isign	направление преобразования (-1 соответствует прямому, 1 - обратному БПФ )
*/
COREDSP_API void FftDif4( Complex *f, ulong n, int is );

#ifdef USE_TEST_PROC
COREDSP_API bool TestFft2();
#endif
}

#endif //__POWER2FFT_TRANSFORM__
